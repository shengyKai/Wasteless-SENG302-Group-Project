{
	"info": {
		"_postman_id": "41f956b7-f976-48f5-be24-d0c189783514",
		"name": "Leftovers tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register User",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"email\": \"johnsmith99@gmail.com\",\n    \"dateOfBirth\": \"1999-04-27\",\n    \"homeAddress\": {\n        \"country\": \"New Zealand\",\n        \"streetNumber\": \"3/24\",\n        \"streetName\": \"Ilam Road\",\n        \"city\": \"Christchurch\",\n        \"region\": \"Canterbury\",\n        \"postcode\": \"90210\"\n    },\n    \"password\": \"1337-H%nt3r2\",\n    \"middleName\": \"Hector\",\n    \"nickname\": \"Jonny\",\n    \"bio\": \"Likes long walks on the beach\",\n    \"phoneNumber\": \"+64 3 555 0129\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "740aa099-111b-4040-afee-b0b5760d364c",
						"exec": [
							"const authToken = pm.response.json().token;",
							"if (typeof authToken !== \"undefined\") {",
							"    pm.globals.set(\"auth_token\", authToken);",
							"}",
							"const userId = pm.response.json().userId;",
							"if (typeof userId !== \"undefined\") {",
							"    pm.globals.set(\"user_id\", userId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"johnsmith99@gmail.com\",\n    \"password\": \"1337-H%nt3r2\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create keyword blue sky scenario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f55452a0-18d2-4849-a8bd-4cfdaadf99a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bb6ae87-e722-43eb-a970-3abd05b3744c",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const keywordId = pm.response.json().keywordId;",
							"if (typeof keywordId !== \"undefined\") {",
							"    pm.globals.set(\"keyword_id\", keywordId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test Keyword\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/keywords",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keywords"
					]
				},
				"description": "Creating a keyword should return a 201 response code when the user is logged in and the keyword is in a valid format."
			},
			"response": []
		},
		{
			"name": "Create keyword invalid format",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f55452a0-18d2-4849-a8bd-4cfdaadf99a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bb6ae87-e722-43eb-a970-3abd05b3744c",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test Keyword 2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/keywords",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keywords"
					]
				},
				"description": "Creating a keyword should return a 201 response code when the user is logged in and the keyword is in a valid format."
			},
			"response": []
		},
		{
			"name": "Create new card",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "JSESSIONID",
							"type": "string"
						},
						{
							"key": "value",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"1982 Lada Samara\",\n    \"creatorId\": {{user_id}},\n    \"section\": \"Wanted\",\n    \"keywordIds\": [\n    ],\n    \"description\": \"Beige, suitable for a hen house. Fair condition. Some rust. As is, where is. Will swap for budgerigar.\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cards",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Business",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "09c4543d-3b49-46dd-9fac-9cf0a9ce2d89",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"primaryAdministratorId\": {{user_id}},\n  \"name\": \"Lumbridge General Store\",\n  \"description\": \"A one-stop shop for all your adventuring needs\",\n  \"address\": {\n    \"streetNumber\": \"3/24\",\n    \"streetName\": \"Ilam Road\",\n    \"suburb\": \"Upper Riccarton\",\n    \"city\": \"Christchurch\",\n    \"region\": \"Canterbury\",\n    \"country\": \"New Zealand\",\n    \"postcode\": \"90210\"\n  },\n  \"businessType\": \"Accommodation and Food Services\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/businesses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"businesses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Business",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "09c4543d-3b49-46dd-9fac-9cf0a9ce2d89",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const businessId = pm.response.json().businessesAdministered[0].id;",
							"if (typeof businessId !== \"undefined\") {",
							"    pm.globals.set(\"business_id\", businessId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"primaryAdministratorId\": {{user_id}},\n  \"name\": \"Lumbridge General Store\",\n  \"description\": \"A one-stop shop for all your adventuring needs\",\n  \"address\": {\n    \"streetNumber\": \"3/24\",\n    \"streetName\": \"Ilam Road\",\n    \"suburb\": \"Upper Riccarton\",\n    \"city\": \"Christchurch\",\n    \"region\": \"Canterbury\",\n    \"country\": \"New Zealand\",\n    \"postcode\": \"90210\"\n  },\n  \"businessType\": \"Accommodation and Food Services\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify Business - Successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dcece915-9ab9-4d65-9d5c-28d65f5f2c61",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"primaryAdministratorId\": {{user_id}},\n  \"name\": \"Lumbridge General Store 2\",\n  \"description\": \"A one-stop shop for all your adventuring needs and stuff\",\n  \"address\": {\n    \"streetNumber\": \"420\",\n    \"streetName\": \"Ilam Road\",\n    \"suburb\": \"Upper Riccarton\",\n    \"city\": \"Christchurches\",\n    \"region\": \"Canterburies\",\n    \"country\": \"New Zealands\",\n    \"postcode\": \"9021\"\n  },\n  \"businessType\": \"Retail Trade\",\n  \"updateProductCountry\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/businesses/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"businesses",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{business_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify Business - Invalid format",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dcece915-9ab9-4d65-9d5c-28d65f5f2c61",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"primaryAdministratorId\": {{user_id}},\n  \"businessType\": \"Retail Traders\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/businesses/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"businesses",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{business_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login DGAA",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abc450f3-b114-4f55-b4c8-71ad6da3b16d",
						"exec": [
							"const authToken = pm.response.json().token;",
							"if (typeof authToken !== \"undefined\") {",
							"    pm.globals.set(\"auth_token\", authToken);",
							"}",
							"const userId = pm.response.json().userId;",
							"if (typeof userId !== \"undefined\") {",
							"    pm.globals.set(\"user_id\", userId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"wasteless@seng302.com\",\n    \"password\": \"{{dgaaPassword}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a keyword as an admin",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "JSESSIONID",
							"type": "string"
						},
						{
							"key": "value",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/keywords/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keywords",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{keyword_id}}",
							"description": "(Required) ID of keyword to delete"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get messages in conversation - No conversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "470cf532-26f9-49e5-97e5-8a1f89f1ec81",
						"exec": [
							"pm.test(\"Status code is 406\", function () {",
							"    pm.response.to.have.status(406);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "JSESSIONID",
							"type": "string"
						},
						{
							"key": "value",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/cards/:cardId/conversations/:buyerId?resultsPerPage=15&page=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						":cardId",
						"conversations",
						":buyerId"
					],
					"query": [
						{
							"key": "resultsPerPage",
							"value": "15"
						},
						{
							"key": "page",
							"value": "1"
						}
					],
					"variable": [
						{
							"key": "cardId",
							"value": "{{card_id}}"
						},
						{
							"key": "buyerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a message to a conversation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0050520c-74fd-48db-a45c-b25765c295c7",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "JSESSIONID",
							"type": "string"
						},
						{
							"key": "value",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"senderId\": 1,\n    \"message\": \"hey dude!\"\n}",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cards/:cardId/conversations/:buyerId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						":cardId",
						"conversations",
						":buyerId"
					],
					"variable": [
						{
							"key": "cardId",
							"value": "{{card_id}}"
						},
						{
							"key": "buyerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get messages in conversation - Blue sky",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "470cf532-26f9-49e5-97e5-8a1f89f1ec81",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"pm.test(\"Response contains correct count\", () => {",
							"   pm.expect(response.count).to.be(1); ",
							"});",
							"",
							"const result = response.results[0];",
							"pm.test(\"Response contains message\", () => {",
							"   pm.expect(result.content).to.be(\"hey dude!\") ",
							"});",
							"pm.test(\"Response contains senderId\", () => {",
							"   pm.expect(result.senderId).to.be(1); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "JSESSIONID",
							"type": "string"
						},
						{
							"key": "value",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/cards/:cardId/conversations/:buyerId?resultsPerPage=15&page=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cards",
						":cardId",
						"conversations",
						":buyerId"
					],
					"query": [
						{
							"key": "resultsPerPage",
							"value": "15"
						},
						{
							"key": "page",
							"value": "1"
						}
					],
					"variable": [
						{
							"key": "cardId",
							"value": "{{card_id}}"
						},
						{
							"key": "buyerId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify User - Successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69b25559-d404-426c-8a89-5dd3b2662627",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Dave\",\n    \"lastName\": \"Johnson\",\n    \"email\": \"johnsmith88@gmail.com\",\n    \"dateOfBirth\": \"1998-04-27\",\n    \"homeAddress\": {\n        \"country\": \"New Zealand\",\n        \"streetNumber\": \"16\",\n        \"streetName\": \"Waimairi Road\",\n        \"city\": \"Christchurch\",\n        \"region\": \"Canterbury\",\n        \"postcode\": \"90210\"\n    },\n    \"password\": \"1337-H%nt3r2\",\n    \"middleName\": \"Hector\",\n    \"nickname\": \"Davo\",\n    \"bio\": \"Hates long walks on the beach\",\n    \"phoneNumber\": \"+64 3 555 0128\",\n    \"newPassword\": \"ILoveTurtles800\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify User - Password not provided",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69b25559-d404-426c-8a89-5dd3b2662627",
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"Dave\",\n    \"lastName\": \"Johnson\",\n    \"email\": \"johnsmith88@gmail.com\",\n    \"dateOfBirth\": \"1998-04-27\",\n    \"homeAddress\": {\n        \"country\": \"New Zealand\",\n        \"streetNumber\": \"16\",\n        \"streetName\": \"Waimairi Road\",\n        \"city\": \"Christchurch\",\n        \"region\": \"Canterbury\",\n        \"postcode\": \"90210\"\n    },\n    \"middleName\": \"Hector\",\n    \"nickname\": \"Davo\",\n    \"bio\": \"Hates long walks on the beach\",\n    \"phoneNumber\": \"+64 3 555 0128\",\n    \"newPassword\": \"ILoveTurtles800\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}