{
	"info": {
		"_postman_id": "bcf40627-8b8d-472f-9ae3-6cc4c0b0f16a",
		"name": "Leftovers tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"email\": \"johnsmith99@gmail.com\",\n    \"dateOfBirth\": \"1999-04-27\",\n    \"homeAddress\": {\n        \"country\": \"New Zealand\",\n        \"streetNumber\": \"3/24\",\n        \"streetName\": \"Ilam Road\",\n        \"city\": \"Christchurch\",\n        \"region\": \"Canterbury\",\n        \"postcode\": \"90210\"\n    },\n    \"password\": \"1337-H%nt3r2\",\n    \"middleName\": \"Hector\",\n    \"nickname\": \"Jonny\",\n    \"bio\": \"Likes long walks on the beach\",\n    \"phoneNumber\": \"+64 3 555 0129\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "740aa099-111b-4040-afee-b0b5760d364c",
						"exec": [
							"const authToken = pm.response.json().token;",
							"if (typeof authToken !== \"undefined\") {",
							"    pm.globals.set(\"auth_token\", authToken);",
							"}",
							"const userId = pm.response.json().userId;",
							"if (typeof userId !== \"undefined\") {",
							"    pm.globals.set(\"user_id\", userId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"johnsmith99@gmail.com\",\n    \"password\": \"1337-H%nt3r2\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create keyword blue sky scenario",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f55452a0-18d2-4849-a8bd-4cfdaadf99a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bb6ae87-e722-43eb-a970-3abd05b3744c",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const keywordId = pm.response.json().keywordId;",
							"if (typeof keywordId !== \"undefined\") {",
							"    pm.globals.set(\"keyword_id\", keywordId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test Keyword\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/keywords",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keywords"
					]
				},
				"description": "Creating a keyword should return a 201 response code when the user is logged in and the keyword is in a valid format."
			},
			"response": []
		},
		{
			"name": "Create keyword invalid format",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f55452a0-18d2-4849-a8bd-4cfdaadf99a8",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bb6ae87-e722-43eb-a970-3abd05b3744c",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Test Keyword 2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/keywords",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keywords"
					]
				},
				"description": "Creating a keyword should return a 201 response code when the user is logged in and the keyword is in a valid format."
			},
			"response": []
		},
		{
			"name": "Login DGAA",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "abc450f3-b114-4f55-b4c8-71ad6da3b16d",
						"exec": [
							"const authToken = pm.response.json().token;",
							"if (typeof authToken !== \"undefined\") {",
							"    pm.globals.set(\"auth_token\", authToken);",
							"}",
							"const userId = pm.response.json().userId;",
							"if (typeof userId !== \"undefined\") {",
							"    pm.globals.set(\"user_id\", userId);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"wasteless@seng302.com\",\n    \"password\": \"{{dgaaPassword}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a keyword as an admin",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "key",
							"value": "JSESSIONID",
							"type": "string"
						},
						{
							"key": "value",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/keywords/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keywords",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{keyword_id}}",
							"description": "(Required) ID of keyword to delete"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}