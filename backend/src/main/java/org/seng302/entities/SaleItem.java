package org.seng302.entities;

import javax.persistence.*;
import java.util.Date;

@Entity
public class SaleItem {

    @Id
    @GeneratedValue
    private Long saleId;
    //TODO uncomment once inventory item created
    /*
    @JoinColumn(name = "inventory_item_id")
    private InventoryItem inventoryItem;  // Item up for sale
    @Column(nullable = false)
    private Long inventoryItemId;
    */
    @Column(nullable = false)
    private int quantity;
    @Column(nullable = false)
    private double price;
    private String moreInfo;
    private Date created;
    private Date closes;  // Defaults to expiry date of product being sold

    /**
     * Autogenerated ID for the sale item
     * @return saleId
     */
    public Long getSaleId() { return saleId; }

    /**
     * Appeases code style, setters shouldn't be needed for auto primary key
     * @param saleId id for the sale item
     */
    public void setSaleId(Long saleId) { this.saleId = saleId; }

    /**
     * Inventory Item that's up for sale
     * @return Instance of the related Inventory Item class
     */
    //public InventoryItem getInventoryItem() { return inventoryItem; }

    /**
     * Set the inventory item that's up for sale
     * @param item that is for sale
     */
    //public void setInventoryItem(InventoryItem item) { this.inventoryItem = item; }

    /**
     * ID of item that is for sale
     * @return inventory item's ID
     */
    //public Long getInventoryItemId() { return inventoryItemId; }

    /**
     * Bind the inventory item that is for sale to the sale item
     * @param inventoryItemId id of item for sale
     */
    //public void setInventoryItemId(Long inventoryItemId) { this.inventoryItemId = inventoryItemId; }

    /**
     * Quantity that is for sale
     * @return Quantity
     */
    public int getQuantity() { return quantity; }

    /**
     * Set the quantity you want to sell
     * Cannot be more than there is in the inventory
     * @param quantity that is for sale
     */
    public void setQuantity(int quantity) { this.quantity = quantity; }

    /**
     * The price of the items for sale
     * @return total price
     */
    public double getPrice() { return price; }

    /**
     * Set the price you want to sell the items at
     * Defaults to single price * quantity
     * @param price of sale item
     */
    public void setPrice(double price) { this.price = price; }

    /**
     * Get any extra info the seller set for this item
     * @return more info
     */
    public String getMoreInfo() { return moreInfo; }

    /**
     * Set the description of the sale item with any extra notes you want to make
     * @param moreInfo on the product
     */
    public void setMoreInfo(String moreInfo) { this.moreInfo = moreInfo; }

    /**
     * The date the sale item was created
     * @return creation date
     */
    public Date getCreated() { return created; }

    /**
     * Set the date this item was created
     * @param created date (usually now)
     */
    public void setCreated(Date created) { this.created = created; }

    /**
     * The date the sale closes
     * @return close date
     */
    public Date getCloses() { return closes; }

    /**
     * Set the time this sale item closes
     * Defaults to expiry date of product
     * @param closes date
     */
    public void setCloses(Date closes) { this.closes = closes; }
}
